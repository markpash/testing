name: Go

on:
  workflow_dispatch:
  release:
    types: [published]
  push:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

          - goos: android
            goarch: arm64

          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7

          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true

      - name: Build testing
        run: |
          go build -v -o ./build/ -trimpath -ldflags "-s -w -buildid= -X main.version=${{ github.sha }}" .

      - name: Upload testing files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: testing_${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}_${{ github.sha }}
          path: ./build/*

      - name: Zip binary
        run: |
          zip -r ./build/testing_${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}_${{ github.sha }}.zip ./build/*

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          file: ./build/testing_${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm }}_${{ github.sha }}.zip
          tag: ${{ github.ref }}
